// bootstrap
import Accordion from 'react-bootstrap/Accordion';
import Tab from "react-bootstrap/Tab";
import Tabs from "react-bootstrap/Tabs"
import Badge from 'react-bootstrap/Badge';
import Row from 'react-bootstrap/Row';
import Col from 'react-bootstrap/Col';
import Container from 'react-bootstrap/Container';
import VulnerabilityDetails from './VulnerabilityDetails';

function VulnerabilityAccordion({ vulnerabilities, dependencies }) {

    return (
        <Accordion alwaysOpen>
            {vulnerabilities.map((vulnerability, index) =>
                <Accordion.Item key={index} eventKey={index}>
                    <Accordion.Header>
                        <Container>
                            <Row>
                                <Col xs lg="2"><Badge pill bg="dark">{vulnerability[0].advisory.severity}</Badge></Col>
                                <Col xs lg="2">{vulnerability[0].event.returnValues.advisoryIdentifier}</Col>
                                <Col xs lg="4">{vulnerability[0].event.returnValues.productIdentifiers}</Col>
                                <Col xs lg="3">{new Date(vulnerability[0].block.timestamp * 1000).toString()}</Col>
                            </Row>
                        </Container>
                    </Accordion.Header>
                    <Accordion.Body>
                        <p>Use the tabs below to select a specific version of the advisory to get information from.</p>
                        <Tabs>
                            { vulnerability.map((version, index) => 
                                <Tab eventKey={"VulnerabilityDetails" + index} 
                                    title={"version " + index}>
                                    <br></br>
                                    <h2>{version.advisory.title}</h2>
                                    <hr></hr>
                                    <h3>{version.advisory.description}</h3>
                                    <br />
                                    {dependencies !== []
                                        ? <VulnerabilityDetails 
                                            advisory={version.advisory} 
                                            dependencies={dependencies} 
                                            vulnerabilityIds={version.event.returnValues.vulnerabilityIdentifiers.split(",")} />
                                        : <h5>Cannot show because of missing dependency information.</h5>
                                    }
                                </Tab>
                            )}
                        </Tabs>
                    </Accordion.Body>
                </Accordion.Item>
            )}
        </Accordion>
    )
}
export default VulnerabilityAccordion;