// bootstrap
import Accordion from 'react-bootstrap/Accordion';
import Tab from "react-bootstrap/Tab";
import Tabs from "react-bootstrap/Tabs"
import Badge from 'react-bootstrap/Badge';
import Row from 'react-bootstrap/Row';
import Col from 'react-bootstrap/Col';
import Container from 'react-bootstrap/Container';

import VulnerabilityDetails from './VulnerabilityDetails';

function VulnerabilityAccordion({ vulnerabilities, dependencies }) {
    return (
        <Accordion alwaysOpen>
            {vulnerabilities.map((vulnerability, index) =>
                <Accordion.Item key={index} eventKey={index}>
                    <Accordion.Header>
                        <Container>
                            <Row>
                                <Col xs lg="2"><Badge pill bg="dark">{vulnerability.advisory.severity}</Badge></Col>
                                <Col xs lg="2">{vulnerability.event.returnValues.advisoryIdentifier}</Col>
                                <Col xs lg="4">{vulnerability.event.returnValues.productIdentifiers}</Col>
                                <Col xs lg="3">{new Date(vulnerability.block.timestamp * 1000).toString()}</Col>
                            </Row>
                        </Container>
                    </Accordion.Header>
                    <Accordion.Body>
                        <Tabs>
                            <Tab eventKey="VulnerabilityDetails" title="Vulnerability details">
                                <br></br>
                                <h2>{vulnerability.advisory.title}</h2>
                                <hr></hr>
                                <h3>{vulnerability.advisory.description}</h3>
                                <br />
                                {dependencies !== []
                                    ? <VulnerabilityDetails 
                                        advisory={vulnerability.advisory} 
                                        dependencies={dependencies} 
                                        vulnerabilityIds={vulnerability.event.returnValues.vulnerabilityIdentifiers.split(",")} />
                                    : <h5>Cannot show because of missing dependency information.</h5>}

                            </Tab>
                            <Tab eventKey="TransactionData" title="Transaction data">
                                <div><pre>{JSON.stringify(vulnerability.tx, null, 2)}</pre></div>
                            </Tab>
                            <Tab eventKey="BlockData" title="Block data">
                                <div><pre>{JSON.stringify(vulnerability.block, null, 2)}</pre></div>
                            </Tab>
                            <Tab eventKey="AdvisoryData" title="Advisory data">
                                <div><pre>{vulnerability.advisory.toString()}</pre></div>
                            </Tab>
                        </Tabs>
                    </Accordion.Body>
                </Accordion.Item>
            )}
        </Accordion>
    )
}
export default VulnerabilityAccordion;